version: '3.8'

services:
  backend:
    build: .
    container_name: api-jobs-backend
    restart: always
    depends_on:
      - database
    environment:
      - PORT=8086
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=leadsdb
      - NODE_ENV=production
      - CORS_ORIGINS=https://jobsandjobs.com,https://www.jobsandjobs.com
    expose:
      - "8086"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.api-jobs.rule=Host(`api.jobsandjobs.com`)"
      - "traefik.http.routers.api-jobs.entrypoints=websecure"
      - "traefik.http.routers.api-jobs.tls=true"
      - "traefik.http.routers.api-jobs.tls.certresolver=myresolver"
      - "traefik.http.services.api-jobs.loadbalancer.server.port=8086"
      - "traefik.http.middlewares.api-jobs-compress.compress=true"
      - "traefik.http.routers.api-jobs.middlewares=api-jobs-compress,cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=https://jobsandjobs.com,https://www.jobsandjobs.com"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolmaxage=86400"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors-headers.headers.addvaryheader=true"
      # Configuración para redirección HTTP a HTTPS
      - "traefik.http.routers.api-jobs-http.rule=Host(`api.jobsandjobs.com`)"
      - "traefik.http.routers.api-jobs-http.entrypoints=web"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.api-jobs-http.middlewares=https-redirect"
    networks:
      - traefik
      - api-network

  database:
    image: postgres:14
    container_name: api-jobs-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=leadsdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - api-network

networks:
  traefik:
    external: true
  api-network:
    driver: bridge

volumes:
  postgres_data:
